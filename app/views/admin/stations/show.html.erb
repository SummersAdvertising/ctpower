Store show<br>
<script src="https://maps.googleapis.com/maps/api/js"></script>
<style type="text/css">
  #map-canvas { height: 700px }
  .gm-style-iw {
    width: 320px; 
    min-height: 200px;
    /*max-height: 350px;*/
  }
</style>
TODO:<br>
1. 撰寫 search 邏輯, 使用 Haversine formula演算法比對<br>
2. 將查詢結果之經緯度 serialized成陣列供繪製 markers使用<br>
3. 將查詢結果之內容 serialized成陣列供繪製 info window使用<br>
<p id='status'></p>
<div id="map-canvas" style="width: 80%; height: 700px"></div>

<%= @station.name %><br>
<%= @station.intro %><br>
<%= @station.phone %><br>
<%= @station.address %><br>
<%= @station.ophour %><br>
<%= @station.latlng.html_safe %><br>
<%= @station.lat %> , <%= @station.lng %><br>
<% if @station.galleries.select{ |v| v['type'] == "StationPhotoGallery"  }.first %>
    <% a = @station.galleries.select{ |v| v['type'] == "StationPhotoGallery"  }.first.attachment.url  %>
<% end %>
<% nearby = Station.within(5, origin: @station).pluck(:name, :lat, :lng).to_json %>

<br><br><br><br>
<%= link_to "GO BACK", admin_stations_path %>

<script>
var map;
var MY_MAPTYPE_ID = 'ctpower_style'
//direction
var directionsDisplay;
var directionsService = new google.maps.DirectionsService();

function initialize() {
    //direction
    directionsDisplay = new google.maps.DirectionsRenderer();
    var bounds = new google.maps.LatLngBounds();
    //style
    var featureOpts = [{"featureType":"water","stylers":[{"color":"#021019"}]},{"featureType":"landscape","stylers":[{"color":"#08304b"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#0c4152"},{"lightness":5}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#0b434f"},{"lightness":25}]},{"featureType":"road.arterial","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"road.arterial","elementType":"geometry.stroke","stylers":[{"color":"#0b3d51"},{"lightness":16}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#000000"}]},{"elementType":"labels.text.fill","stylers":[{"color":"#ffffff"}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#000000"},{"lightness":13}]},{"featureType":"transit","stylers":[{"color":"#146474"}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#144b53"},{"lightness":14},{"weight":1.4}]}];

    var mapOptions = {
      // zoom: 14,
      // use current geolocation
      // center: latlng,
      center: new google.maps.LatLng(<%= @station.lat %>, <%= @station.lng %>),
      mapTypeControlOptions: {
        //theme
        mapTypeIds: [google.maps.MapTypeId.ROADMAP, MY_MAPTYPE_ID]
        //mapTypeIds: [google.maps.MapTypeId.ROADMAP]
      }
      //theme
      ,mapTypeId: MY_MAPTYPE_ID
    };

    map = new google.maps.Map(document.getElementById('map-canvas'),
        mapOptions);
    //direction
    directionsDisplay.setMap(map);

    // var latlng = new google.maps.LatLng(imhere.coords.latitude, imhere.coords.longitude);
    // var here_marker = new google.maps.Marker({
    //   position: latlng, 
    //   map: map, 
    //   title:"You are here! (at least within a "+imhere.coords.accuracy+" meter radius)"
    // });

    //theme
    var styledMapOptions = {
      name: 'Ctpower Style'
    };
    //theme
    var customMapType = new google.maps.StyledMapType(featureOpts, styledMapOptions);
    //theme
    map.mapTypes.set(MY_MAPTYPE_ID, customMapType);

    // Multiple Markers
    // var markers = [
    //     // ['You are here! (at least within a '+imhere.coords.accuracy+' meter radius)', imhere.coords.latitude, imhere.coords.longitude],
    //     ['站點：<%= @station.name %>', <%= @station.lat %>, <%= @station.lng %>],
    //     ['sample信義威秀', 25.035655, 121.566919],
    //     ['sample寒舍愛美酒店', 25.038255, 121.568024]
    // ];
    var markers = <%= raw nearby %>;
    var infoWindowContent = <%= raw @info_array %>;
    // console.log(markers);
    // Info Window Content
    // var infoWindowContent = [
    //     ['<div class="info_content">' +
    //     '<h3><%= @station.name %></h3>' +
    //     '<p>文創集散地 The London Eye is a giant Ferris wheel situated on the banks of the River Thames. The entire structure is 135 metres (443 ft) tall and the wheel has a diameter of 120 metres (394 ft).</p><%= image_tag a %>' +        '</div>'],
    //     ['<div class="info_content">' +
    //     '<h3>London Eye</h3>' +
    //     '<p>The London Eye is a giant Ferris wheel situated on the banks of the River Thames. The entire structure is 135 metres (443 ft) tall and the wheel has a diameter of 120 metres (394 ft).</p>' +        '</div>'],
    //     ['<div class="info_content">' +
    //     '<h3>Palace of Westminster</h3>' +
    //     '<p>The Palace of Westminster is the meeting place of the House of Commons and the House of Lords, the two houses of the Parliament of the United Kingdom. Commonly known as the Houses of Parliament after its tenants.</p>' +
    //     '</div>']
    // ];

    // imhere
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
            function(position) {
              var imhere = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
              // markers.push(['You are here!', position.coords.latitude, position.coords.longitude]);
              //map.setCenter(imhere);
              here_markers = new google.maps.Marker({
                position: imhere,
                icon: createMarkerIcon('You are here!', {
                        bgColor: "blue"
                }),
                map: map
                // title: markers[i][0]
              });
             
        }, function() {
          handleNoGeolocation(browserSupportFlag);
        }
      );
    }
    
    // Display multiple markers on a map
    var infoWindow = new google.maps.InfoWindow(), marker, i;
    
    // Loop through our array of markers & place each one on the map  
    for( i = 0; i < markers.length; i++ ) {
        var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
        bounds.extend(position);
        marker = new google.maps.Marker({
            position: position,
            icon: createMarkerIcon(markers[i][0], {
                    bgColor: "green"
            }),
            map: map
            // title: markers[i][0]
        });
        
        // Allow each marker to have an info window    
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infoWindow.setContent(infoWindowContent[i][0]);
                infoWindow.open(map, marker);
            }
        })(marker, i));

        // Automatically center the map fitting all markers on the screen
        map.fitBounds(bounds);
    }

     // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
    var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
        this.setZoom(14);
        google.maps.event.removeListener(boundsListener);
    });
    
  }
  //direction
  var current_station = new google.maps.LatLng(<%= @station.lat %>, <%= @station.lng %>)
  var sample_end = new google.maps.LatLng(25.035655, 121.566919)
  calcRoute(current_station,sample_end);

  google.maps.event.addDomListener(window, 'load', initialize);

  // var origin1 = nav_geo_current_position;
  // var destinationA = new google.maps.LatLng(<%= @station.lat %>, <%= @station.lng %>);
  

  // function error(msg) {
  // var s = document.querySelector('#status');
  // s.innerHTML = typeof msg == 'string' ? msg : "failed";
  // s.className = 'fail';
  
  //   // console.log(arguments);
  // }


  // if (navigator.geolocation) {
  //   navigator.geolocation.getCurrentPosition(initialize, error);
  // } else {
  //   error('not supported');
  // }

  function handleNoGeolocation(errorFlag) {
    if (errorFlag == true) {
      alert("Geolocation service failed.");
      initialLocation = newyork;
    } else {
      alert("Your browser doesn't support geolocation. We've placed you in Siberia.");
      initialLocation = siberia;
    }
    map.setCenter(initialLocation);
  }

  function calcRoute(start, end) {
    // var start = document.getElementById('start').value;
    // var end = document.getElementById('end').value;
    var request = {
        origin:start,
        destination:end,
        travelMode: google.maps.TravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      }
    });
  }

</script>

<script>
        
            //利用canvas產生一個內含文字的圖檔
            function createMarkerIcon(text, opt) {
                //定義預設參數
                var defaultOptions = {
                    fontStyle: "normal", //normal, bold, italic
                    fontName: "Arial",
                    fontSize: 12, //以Pixel為單位
                    bgColor: "darkblue",
                    fgColor: "white",
                    padding: 4,
                    arrowHeight: 6 //下方尖角高度
                };
                options = $.extend(defaultOptions, opt);
                //建立Canvas，開始幹活兒
                var canvas = document.createElement("canvas"),
                    context = canvas.getContext("2d");
                //評估文字尺寸
                var font = options.fontStyle + " " + options.fontSize + "px " + 
                           options.fontName;
                context.font = font;
                var metrics = context.measureText(text);
                //文字大小加上padding作為外部尺寸
                var w = metrics.width + options.padding * 2;
                //高度以Font的大小為準
                var h = options.fontSize + options.padding * 2 +
                        options.arrowHeight;
                canvas.width = w;
                canvas.height = h;
                //邊框及背景
                context.beginPath();
                context.rect(0, 0, w, h - options.arrowHeight);
                context.fillStyle = options.bgColor;
                context.fill();
                //畫出下方尖角
                context.beginPath();
                var x = w / 2, y = h, arwSz = options.arrowHeight;
                context.moveTo(x, y);
                context.lineTo(x - arwSz, y - arwSz);
                context.lineTo(x + arwSz, y - arwSz);
                context.lineTo(x, y);
                context.fill();
                //印出文字
                context.textAlign = "center";
                context.fillStyle = options.fgColor;
                context.font = font;
                context.fillText(text,
                    w / 2,
                    (h - options.arrowHeight) / 2 + options.padding);
                //傳回DataURI字串
                return canvas.toDataURL();
            }
 
           
    </script>